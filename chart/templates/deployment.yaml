apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "project.name" . }}
  labels:
    app: {{ include "project.name" . }}
    appGroup: {{ .Values.global.appGroup }}
    chart: {{ include "project.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.global.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "project.name" . }}
      appGroup: {{ .Values.global.appGroup }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "project.name" . }}
        appGroup: {{ .Values.global.appGroup }}
        release: {{ .Release.Name }}
    spec:
      imagePullSecrets:
      - name: {{ .Values.global.imagePullSecretName }}
      securityContext:
        runAsUser: 0
      serviceAccount: privileged
      serviceAccountName: privileged
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.global.repository }}{{ .Chart.Name }}:{{ .Values.imageTag }}"
{{- if .Values.deploy.command }}
        command:
{{ toYaml .Values.deploy.command | indent 8 }}
{{- end }}
{{- if .Values.deploy.args }}
        args:
{{ toYaml .Values.deploy.args | indent 8 }}
{{- end }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        env:
        - name: "NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: "VERSION"
          value: {{ .Values.imageTag }}
        - name: "JAEGERNAME"
          value: {{ .Values.jaegerName }}
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
{{- if .Values.deploy.env }}
{{ toYaml .Values.deploy.env | indent 8 }}
{{- end }}
        ports:
{{ toYaml .Values.deploy.ports | indent 10 }}
{{- if .Values.deploy.livenessProbe }}
        livenessProbe:
{{ toYaml .Values.deploy.livenessProbe | indent 10 }}
{{- end }}
{{- if .Values.deploy.readinessProbe }}
        readinessProbe:
{{ toYaml .Values.deploy.readinessProbe | indent 10 }}
{{- end }}
        resources:
{{ toYaml .Values.deploy.resources | indent 10 }}
        securityContext:
          privileged: true
        volumeMounts:
        - name: time
          mountPath: /etc/localtime
{{- if .Values.deploy.volumeMounts }}
{{ toYaml .Values.deploy.volumeMounts | indent 8 }}
{{- end }}
      volumes:
      - name: logs
        hostPath:
          path: "/var/log/ewellapps/{{ .Values.global.namespace }}/"
      - name: time
        hostPath:
          path: /etc/localtime
{{- if .Values.persistence.enabled }}
      - name: storage
        persistentVolumeClaim:
          claimName: {{ include "project.name" . }}
{{- end }}
{{- if .Values.configmaps.enabled }}
      - name: app-config
        configMap:
          defaultMode: 420
          name: {{ include "project.name" . }}
{{- end }}
{{- if .Values.deploy.volumes }}
{{ toYaml .Values.deploy.volumes | indent 6 }}
{{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}